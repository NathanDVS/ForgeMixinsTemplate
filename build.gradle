plugins {
    id "net.minecraftforge.gradle.forge" version "6f5327"
    id "org.spongepowered.mixin" version "d5f9873d60"
}

version = "1.0.0"
group = "net.examplemod"
archivesBaseName = "ExampleMod"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
    makeObfSourceJar = false
    clientRunArgs += "--tweakClass org.spongepowered.asm.launch.MixinTweaker"
    clientRunArgs += "--mixin mixins.example.json"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
}

configurations {
    embed
    implementaton.extendsFrom(embed)
}


dependencies {
    embed("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
    
    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")
}

mixin {
    add sourceSets.main, "mixins.example.refmap.json"
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "MixinConfigs": "mixins.example.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0",
    )

    from {
        configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceSets {
    main { output.resourcesDir = java.outputDir }
}
